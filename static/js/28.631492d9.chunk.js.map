{"version":3,"file":"static/js/28.631492d9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/Contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","RegisterView/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\ndisplay:flex;\nflex-direction: column;\ngap: 20px;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\n`;\n\n\nexport const FormField = styled.label`\ndisplay:flex;\nflex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\ncolor: tomato;\n`;","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import { Formik, Field, } from 'formik';\nimport * as Yup from 'yup';\nimport {FormField, Form,ErrorMessage} from './ContactForm.styled';\nimport { addContact } from 'redux/Contacts/Operations';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getContacts } from 'redux/Contacts/selectors';\n\nconst schema = Yup.object().shape({\n   name: Yup.string()\n     .min(2, 'Too Short!')\n     .max(20, 'Too Long!')\n     .required('Required'),\nnumber: Yup.number().positive('!!! > 0').required('Required'),\n });\n\n\nexport const ContactForm = () => {\nconst dispatch = useDispatch();\nconst contacts = useSelector(getContacts);\n\n    const handleSaveContact = (values, actions) => {\n        const normalizedName = values.name.toLowerCase();\n        const findName = contacts.find(({name}) => name.toLowerCase() === normalizedName);\n\n        if (findName) {\n            return  alert(`${values.name} is already in contacts`)\n           }\n           dispatch(addContact(values));\n           actions.resetForm();\n      }\n     \n    return (\n    <Formik\n        initialValues={{ name: \"\", number: \"\" }}\n        validationSchema={schema}\n            onSubmit={handleSaveContact}>\n        <Form>\n            <FormField htmlFor=\"name\">\n                Name\n            <Field\n  type=\"text\"\n  name=\"name\"\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required/>\n                <ErrorMessage name=\"name\" component=\"span\"/>\n                </FormField>\n\n                <FormField htmlFor=\"number\">Number\n                    <Field type=\"tel\"\n  name=\"number\"\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required />\n                    <ErrorMessage name=\"number\" component=\"span\" />\n                </FormField>\n            <button type='submit'>Add contact</button> \n        </Form>\n        </Formik>\n    )\n}\n","import styled from 'styled-components';\n\nexport const FindFilter = styled.label`\ndisplay:flex;\nflex-direction: column;\ngap: 20px;\nwidth: 400px;\n`;\n\nexport const Field = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  font: inherit;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport {setFilterValue} from \"redux/Contacts/ContactSlice\";\nimport { getFilter } from \"redux/Contacts/selectors\";\nimport { FindFilter, Field } from \"./Filter.styled\";\n\n\n  export const Filter = () => {\n const dispatch = useDispatch();\n const filter = useSelector(getFilter);\n\nconst  changeFilter = evt => {\ndispatch(setFilterValue(evt.target.value ));\n\n  };\n\n    return (\n        <FindFilter>\n            Find contacts by name\n            <Field type=\"text\" \n            name=\"filter\" value={filter} \n            placeholder=\"Find contact\" \n            onChange={changeFilter} />\n        </FindFilter>\n    )\n};","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\ndisplay:flex;\ngap: 16px;\nwidth: 460px;\njustify-content:space-between;\nalign-items: center;\nborder: 1px solid #2f2f37;\nborder-radius: 4px;\npadding: 8px;\n\n`;\n\nexport const Button = styled.button`\nwidth:60px;\nheight: 30px;\nbackground-color: lightblue;\nborder-radius: 5px;\ncursor: pointer;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/Contacts/Operations'\nimport { Button, ListItem } from \"./ContactsItem.styled\";\n\nexport const ContactsItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <p> {name}:  {phone}</p>\n    <Button type=\"button\" onClick={() => dispatch(deleteContact(id)) }>\n    Delete</Button>\n</ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\nborder: 1px solid #2f2f37;\nborder-radius: 4px;\noutline-color: #1976d2;\nwidth: 600px;\n\n`\n\nexport const List = styled.ul`\nlist-style: none;\npadding:0;\nmargin:40px;\n`;\n\n\n\n","import { useSelector } from \"react-redux\";\nimport { ContactsItem } from \"components/ContactsItem/ContactsItem\"; \nimport { getContacts, getFilter} from 'redux/Contacts/selectors';\nimport { List, Container } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n  \n   const contacts = useSelector(getContacts);\n   const filter = useSelector(getFilter);\n\n    const findContact = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n          name.toLowerCase().includes(normalizedFilter)\n        );\n        }\n     \n    const findFilterContacts = findContact();\n\n    return (\n        <Container>\n            <List>\n                {findFilterContacts.map(contact => \n                (<ContactsItem key ={contact.id} contact={contact}/>)\n                     )}  \n            </List>\n        </Container>\n    )\n}","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nconst Contacts=()=> {\nreturn(\n<div>\n    <h2>Please, enter a name and phonenumber to add contact</h2>\n    <ContactForm/>\n    <h2>Contacts</h2>\n    <Filter/>\n    <ContactList/>\n</div>\n)\n};\n\nexport default Contacts;"],"names":["Form","styled","FormikForm","FormField","ErrorMessage","FormikError","getContacts","state","contacts","items","getFilter","filter","schema","Yup","shape","name","min","max","required","number","positive","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","normalizedName","toLowerCase","find","alert","addContact","resetForm","htmlFor","type","pattern","title","component","FindFilter","Field","Filter","value","placeholder","onChange","evt","setFilterValue","target","ListItem","Button","ContactsItem","contact","id","phone","onClick","deleteContact","Container","List","ContactList","findFilterContacts","normalizedFilter","includes","findContact","map"],"sourceRoot":""}